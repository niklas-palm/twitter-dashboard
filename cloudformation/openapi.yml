openapi: '3.0.2'
info:
  title:
    Fn::Sub: "${AWS::StackName}-api"
  version: '1.0'

paths:
  /:
    get:
      summary: Get QuickSight dashboard URL for emebeding
      description: |
        QuickSight dashboard URL for emebeding
      parameters:
        - $ref: '#/components/parameters/authHeader'
      responses:
        200:
          description: Dashboard URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string

        default:
          description: Something went wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        type: aws_proxy
        uri:
          Fn::Sub: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GenEmbedUrlLambda.Arn}/invocations"
      security:
        - EndpointAuthorizer: []

    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
      - CORS
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}

components:
  securitySchemes:
    EndpointAuthorizer:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: cognito_user_pools
      x-amazon-apigateway-authorizer:
        type: cognito_user_pools
        providerARNs: 
          - Fn::Sub: arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPool}
  headers:
    corsHeaders:
      Access-Control-Allow-Origin:
        schema:
          type: string
      Access-Control-Allow-Methods:
        schema:
          type: string
      Access-Control-Allow-Headers:
        schema:
          type: string
  parameters:
    authHeader:
      in: header
      name: Authorization
      description: JWT obtained from Cognito
      schema:
        type: string
      required: true


    